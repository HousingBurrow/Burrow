// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum PropertyType {
  APARTMENT
  HOUSE
}

enum RoomType {
  SINGLE
  DOUBLE
}

enum ApartmentType {
  SixBySix
  FiveByFive
  FourByFour
  ThreeByThree
  TwoByTwo
  Studio

  FiveByThree
  FiveByFour
}

enum Location {
  Midtown
  WestMidtown
  HomePark
  NorthAvenue
}

model User {
  id         Int       @id @default(autoincrement())
  stack_auth_id String?  @unique  // Link to Stack Auth user
  email      String    @unique
  first_name String
  last_name  String
  gender     String
  age        Int
  listings   Listing[]

  @@index([last_name])
}

model Listing {
  id                Int          @id @default(autoincrement())
  title             String
  address           String
  description       String
  property_type     PropertyType
  location          Location
  distance_in_miles Decimal

  price               Decimal
  num_rooms_available Int
  total_rooms         Int
  number_roommates    Int
  utilities_included  Boolean
  sqft                Int
  imageUrls           String[]

  start_date DateTime
  end_date   DateTime
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  apartmentDetails ApartmentDetails?
  houseDetails     HouseDetails?

  lister_id Int
  lister    User @relation(fields: [lister_id], references: [id], onDelete: Cascade)

  @@index([lister_id])
  @@index([property_type])
}

model ApartmentDetails {
  id         Int     @id @default(autoincrement())
  listing_id Int     @unique
  listing    Listing @relation(fields: [listing_id], references: [id], onDelete: Cascade)

  room_type      RoomType
  apartment_type ApartmentType
}

model HouseDetails {
  id            Int     @id @default(autoincrement())
  listing_id    Int     @unique
  listing       Listing @relation(fields: [listing_id], references: [id], onDelete: Cascade)
  num_bathrooms Decimal
  num_rooms     Int
}
